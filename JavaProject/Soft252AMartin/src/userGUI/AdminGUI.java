package userGUI;

import people.Administrator;

public class AdminGUI extends javax.swing.JFrame 
{
    private String userID;
    private Administrator thisUser;
    private String[] holdingStringArray01;
    private String[] holdingStringArray02;
    private String[] holdingStringArray03;
    private String[] holdingStringArray04;
    private enum mode
    {
        begining,
        removeAdminAccount,
        createAdminAccount,
        createDoctor,
        removeDoctor,
        createSecretary,
        removeSecretary,
        giveDoctorFeedback
    }
    /**
     * Creates new form AdminGUI
     */
    public AdminGUI(String userID) 
    {
        //this.userID = userID;
        thisUser = new Administrator(userID);
        initComponents();
        setMode(begining);
        sendUserMessage("Hello");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.JPanel pnlMajorButtons = new javax.swing.JPanel();
        btnCreateAdminAccount = new javax.swing.JButton();
        btnCreateDoctor = new javax.swing.JButton();
        btnRemoveDoctor = new javax.swing.JButton();
        btnCreateSecretary = new javax.swing.JButton();
        btnRemoveSecretary = new javax.swing.JButton();
        btnRemoveAdminAccount = new javax.swing.JButton();
        btnGiveDoctorFeedback = new javax.swing.JButton();
        btnConfirm = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaUserMassages = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnCreateAdminAccount.setText("create Admin Account");
        btnCreateAdminAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateAdminAccountActionPerformed(evt);
            }
        });

        btnCreateDoctor.setText("create Doctor");
        btnCreateDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateDoctorActionPerformed(evt);
            }
        });

        btnRemoveDoctor.setText("remove Doctor");
        btnRemoveDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveDoctorActionPerformed(evt);
            }
        });

        btnCreateSecretary.setText("create Secretary");
        btnCreateSecretary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateSecretaryActionPerformed(evt);
            }
        });

        btnRemoveSecretary.setText("remove Secretary");
        btnRemoveSecretary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveSecretaryActionPerformed(evt);
            }
        });

        btnRemoveAdminAccount.setText("remove Admin Account");
        btnRemoveAdminAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveAdminAccountActionPerformed(evt);
            }
        });

        btnGiveDoctorFeedback.setText("give Doctor Feedback");
        btnGiveDoctorFeedback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGiveDoctorFeedbackActionPerformed(evt);
            }
        });

        btnConfirm.setText("Confirm");

        btnCancel.setText("Cancel");
        btnCancel.setToolTipText("");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        jTextAreaUserMassages.setColumns(20);
        jTextAreaUserMassages.setRows(5);
        jScrollPane1.setViewportView(jTextAreaUserMassages);

        javax.swing.GroupLayout pnlMajorButtonsLayout = new javax.swing.GroupLayout(pnlMajorButtons);
        pnlMajorButtons.setLayout(pnlMajorButtonsLayout);
        pnlMajorButtonsLayout.setHorizontalGroup(
            pnlMajorButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMajorButtonsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMajorButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCreateAdminAccount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCreateDoctor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnRemoveDoctor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCreateSecretary, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnRemoveSecretary, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnRemoveAdminAccount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnGiveDoctorFeedback, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnConfirm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlMajorButtonsLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlMajorButtonsLayout.setVerticalGroup(
            pnlMajorButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMajorButtonsLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(btnRemoveAdminAccount)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCreateAdminAccount)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCreateDoctor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRemoveDoctor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCreateSecretary)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRemoveSecretary)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnGiveDoctorFeedback)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnConfirm)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlMajorButtons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(604, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlMajorButtons, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnRemoveAdminAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveAdminAccountActionPerformed
        setMode(removeAdminAccount);
        sendUserMessage("Removing Admin Account");
    }//GEN-LAST:event_btnRemoveAdminAccountActionPerformed

    private void btnCreateAdminAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateAdminAccountActionPerformed
        setMode(createAdminAccount);
        sendUserMessage("Creating Admin Account");
    }//GEN-LAST:event_btnCreateAdminAccountActionPerformed

    private void btnCreateDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateDoctorActionPerformed
        setMode(createDoctor);
        sendUserMessage("Creating Doctor account");
    }//GEN-LAST:event_btnCreateDoctorActionPerformed

    private void btnRemoveDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveDoctorActionPerformed
        setMode(removeDoctor);
        sendUserMessage("Removing Doctor account");
    }//GEN-LAST:event_btnRemoveDoctorActionPerformed

    private void btnCreateSecretaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateSecretaryActionPerformed
        setMode(createSecretary);
        sendUserMessage("creating Secretary Account");
    }//GEN-LAST:event_btnCreateSecretaryActionPerformed

    private void btnRemoveSecretaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveSecretaryActionPerformed
        setMode(removeSecretary);
        sendUserMessage("removing Secretary Account");
    }//GEN-LAST:event_btnRemoveSecretaryActionPerformed

    private void btnGiveDoctorFeedbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGiveDoctorFeedbackActionPerformed
        setMode(giveDoctorFeedback);
        sendUserMessage("Give doctor feedback");
    }//GEN-LAST:event_btnGiveDoctorFeedbackActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        setMode(begining);
        sendUserMessage("ACTION CANCELLED");
    }//GEN-LAST:event_btnCancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String userID) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run(String userID) {
                new AdminGUI(userID).setVisible(true);
                
            }
        });
    }
    private void setMode(enum mode)
    {
        switch(mode)
        {
            case (removeAdminAccount):
                managePnlMajorButtons(1);
                holdingStringArray01 = thisUser.viewAdmins();
                break;
            case (createAdminAccount):
                managePnlMajorButtons(2);
                break;
            case (createDoctor):
                managePnlMajorButtons(3);
                break;
            case (removeDoctor):
                managePnlMajorButtons(4);
                holdingStringArray01 = thisUser.viewDoctors();
                break;
            case (createSecretary):
                managePnlMajorButtons(5);
                break;
            case (removeSecretary):
                managePnlMajorButtons(6);
                holdingStringArray01 = thisUser.viewSecretaries();
                break;
            case(giveDoctorFeedback):
                managePnlMajorButtons(7);
                break;
            case (begining):
                managePnlMajorButtons(0);
                removeHoldingData();
                break;
        }   
    }
    private void managePnlMajorButtons(int selection)
    {
        switch(selection)
        {
            case -1:
            btnCreateAdminAccount.setEnable(false);
            btnCreateDoctor.setEnable(false);
            btnCreateSecretary.setEnable(false);
            btnGiveDoctorFeedback.setEnable(false);
            btnRemoveAdminAccount.setEnable(false);
            btnRemoveDoctor.setEnable(false);
            btnRemoveSecretary.setEnable(false);
            break;
        case 0:
            btnCreateAdminAccount.setEnable(true);
            btnCreateDoctor.setEnable(true);
            btnCreateSecretary.setEnable(true);
            btnGiveDoctorFeedback.setEnable(true);
            btnRemoveAdminAccount.setEnable(true);
            btnRemoveDoctor.setEnable(true);
            btnRemoveSecretary.setEnable(true);
            btnConfirm.setVisable(false);
            btnConfirm.setEnabled(false);
            btnCancel.setVisable(false);
            btnCancel.setEnabled(false);
            break;
        case 1:
            managePnlMajorButtons(-1);
            btnRemoveAdminAccount.setEnable(true);
            btnCancel.setVisable(true);
            btnCancel.setEnabled(true);
            break;
        case 2:
            managePnlMajorButtons(-1);
            btnCreateAdminAccount.setEnable(true);
            btnCancel.setVisable(true);
            btnCancel.setEnabled(true);
            break;
        case 3:
            managePnlMajorButtons(-1);
            btnCreateDoctor.setEnable(true);
            btnCancel.setVisable(true);
            btnCancel.setEnabled(true);
            break;
        case 4:
            managePnlMajorButtons(-1);
            btnRemoveDoctor.setEnable(true);
            btnCancel.setVisable(true);
            btnCancel.setEnabled(true);
            break;
        case 5:
            managePnlMajorButtons(-1);
            btnCreateSecretary.setEnable(true);
            btnCancel.setVisable(true);
            btnCancel.setEnabled(true);
            break;
        case 6:
            managePnlMajorButtons(-1);
            btnRemoveSecretary.setEnable(true);
            btnCancel.setVisable(true);
            btnCancel.setEnabled(true);
            break;
        case 7:
            managePnlMajorButtons(-1);
            btnGiveDoctorFeedback.setEnable(true);
            btnCancel.setVisable(true);
            btnCancel.setEnabled(true);
            break;
        }
    }
    private void sendUserMessage(String message)
    {
        String currentMessages = jTextAreaUserMassages.getText();
        jTextAreaUserMassages.setText(currentMessages + "\n" + message);
    }
    private void removeHoldingData()
    {
        holdingStringArray01 = null;
        holdingStringArray02 = null;
        holdingStringArray03 = null;
        holdingStringArray04 = null;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnConfirm;
    private javax.swing.JButton btnCreateAdminAccount;
    private javax.swing.JButton btnCreateDoctor;
    private javax.swing.JButton btnCreateSecretary;
    private javax.swing.JButton btnGiveDoctorFeedback;
    private javax.swing.JButton btnRemoveAdminAccount;
    private javax.swing.JButton btnRemoveDoctor;
    private javax.swing.JButton btnRemoveSecretary;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaUserMassages;
    // End of variables declaration//GEN-END:variables
}
